// Code generated by MockGen. DO NOT EDIT.
// Source: internal/api/service/review.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/kirananto/review-system/internal/api/dto"
	response "github.com/kirananto/review-system/internal/api/response"
	models "github.com/kirananto/review-system/internal/models"
)

// MockReviewService is a mock of ReviewService interface.
type MockReviewService struct {
	ctrl     *gomock.Controller
	recorder *MockReviewServiceMockRecorder
}

// MockReviewServiceMockRecorder is the mock recorder for MockReviewService.
type MockReviewServiceMockRecorder struct {
	mock *MockReviewService
}

// NewMockReviewService creates a new mock instance.
func NewMockReviewService(ctrl *gomock.Controller) *MockReviewService {
	mock := &MockReviewService{ctrl: ctrl}
	mock.recorder = &MockReviewServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReviewService) EXPECT() *MockReviewServiceMockRecorder {
	return m.recorder
}

// GetReviewByID mocks base method.
func (m *MockReviewService) GetReviewByID(id uint) (*models.Review, *response.ErrorDetails) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReviewByID", id)
	ret0, _ := ret[0].(*models.Review)
	ret1, _ := ret[1].(*response.ErrorDetails)
	return ret0, ret1
}

// GetReviewByID indicates an expected call of GetReviewByID.
func (mr *MockReviewServiceMockRecorder) GetReviewByID(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReviewByID", reflect.TypeOf((*MockReviewService)(nil).GetReviewByID), id)
}

// GetReviewsList mocks base method.
func (m *MockReviewService) GetReviewsList(queryParam *dto.ReviewQueryParams) ([]*models.Review, int, *response.ErrorDetails) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReviewsList", queryParam)
	ret0, _ := ret[0].([]*models.Review)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(*response.ErrorDetails)
	return ret0, ret1, ret2
}

// GetReviewsList indicates an expected call of GetReviewsList.
func (mr *MockReviewServiceMockRecorder) GetReviewsList(queryParam interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReviewsList", reflect.TypeOf((*MockReviewService)(nil).GetReviewsList), queryParam)
}

// ProcessReviews mocks base method.
func (m *MockReviewService) ProcessReviews(ctx context.Context, reader io.Reader, fileName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ProcessReviews", ctx, reader, fileName)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProcessReviews indicates an expected call of ProcessReviews.
func (mr *MockReviewServiceMockRecorder) ProcessReviews(ctx, reader, fileName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessReviews", reflect.TypeOf((*MockReviewService)(nil).ProcessReviews), ctx, reader, fileName)
}
