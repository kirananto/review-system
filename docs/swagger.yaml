basePath: /api/v1
definitions:
  dto.HotelRequestBody:
    properties:
      hotel_name:
        type: string
    required:
    - hotel_name
    type: object
  models.Hotel:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.Provider:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.ProviderHotel:
    properties:
      created_at:
        type: string
      grades:
        description: jsonb for Postgres
        type: string
      hotel_id:
        type: integer
      overall_score:
        type: number
      provider_id:
        type: integer
      review_count:
        type: integer
      updated_at:
        type: string
    type: object
  models.Review:
    properties:
      comment:
        type: string
      created_at:
        type: string
      hotel_id:
        type: integer
      id:
        type: integer
      lang:
        type: string
      provider_id:
        type: integer
      rating:
        type: number
      review_date:
        type: string
      reviewer_info:
        type: string
      updated_at:
        type: string
    type: object
  response.HTTPResponse:
    properties:
      code:
        type: integer
      content: {}
      message:
        type: string
    type: object
  response.HTTPResponseContent:
    properties:
      count:
        type: integer
      next:
        type: string
      prev:
        type: string
      results: {}
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample server for a review system.
  title: Review System API
  version: "1.0"
paths:
  /health:
    get:
      description: Get server health status
      operationId: health-check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
  /hotels:
    get:
      description: Get a list of hotels with optional filters
      parameters:
      - description: Hotel name
        in: query
        name: name
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/response.HTTPResponseContent'
                  - properties:
                      results:
                        items:
                          $ref: '#/definitions/models.Hotel'
                        type: array
                    type: object
              type: object
      summary: Get a list of hotels
    post:
      consumes:
      - application/json
      description: Create a new hotel
      parameters:
      - description: Hotel object
        in: body
        name: hotel
        required: true
        schema:
          $ref: '#/definitions/dto.HotelRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  $ref: '#/definitions/models.Hotel'
              type: object
      summary: Create a new hotel
  /hotels/{id}:
    delete:
      description: Delete a hotel
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a hotel
    get:
      description: Get a hotel by ID
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  $ref: '#/definitions/models.Hotel'
              type: object
      summary: Get a hotel by ID
    put:
      consumes:
      - application/json
      description: Update a hotel
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Hotel object
        in: body
        name: hotel
        required: true
        schema:
          $ref: '#/definitions/dto.HotelRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  $ref: '#/definitions/models.Hotel'
              type: object
      summary: Update a hotel
  /provider-hotels:
    get:
      description: Get a list of provider hotels with optional filters
      parameters:
      - description: Provider ID
        in: query
        name: provider_id
        type: integer
      - description: Hotel ID
        in: query
        name: hotel_id
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/response.HTTPResponseContent'
                  - properties:
                      results:
                        items:
                          $ref: '#/definitions/models.ProviderHotel'
                        type: array
                    type: object
              type: object
      summary: Get a list of provider hotels
  /providers:
    get:
      description: Get a list of providers with optional filters
      operationId: get-providers-list
      parameters:
      - description: Provider name
        in: query
        name: name
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/response.HTTPResponseContent'
                  - properties:
                      results:
                        items:
                          $ref: '#/definitions/models.Provider'
                        type: array
                    type: object
              type: object
      summary: Get a list of providers
  /providers/{id}:
    get:
      description: Get a provider by ID
      operationId: get-provider-by-id
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  $ref: '#/definitions/models.Provider'
              type: object
      summary: Get a provider by ID
  /reviews:
    get:
      description: Get a list of reviews with optional filters
      operationId: get-reviews-list
      parameters:
      - description: Hotel ID
        in: query
        name: hotel_id
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/response.HTTPResponseContent'
                  - properties:
                      results:
                        items:
                          $ref: '#/definitions/models.Review'
                        type: array
                    type: object
              type: object
      summary: Get a list of reviews
  /reviews/{id}:
    get:
      description: Get a Review by ID
      operationId: get-review-by-id
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  $ref: '#/definitions/models.Review'
              type: object
      summary: Get a Review by ID
swagger: "2.0"
