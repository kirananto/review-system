basePath: /api/v1
definitions:
  response.HTTPResponse:
    properties:
      code:
        type: integer
      content: {}
      message:
        type: string
    type: object
  response.HTTPResponseContent:
    properties:
      count:
        type: integer
      next:
        type: string
      prev:
        type: string
      results: {}
    type: object
  review.Provider:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        description: e.g., "Agoda"
        type: string
      updated_at:
        type: string
    type: object
  review.Review:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: integer
      lang:
        type: string
      provider_hotel_id:
        description: 'TODO: shouldnt this be hotelID ?'
        type: integer
      provider_id:
        type: integer
      provider_review_id:
        description: 'TODO: isnt this same as ID?'
        type: string
      rating:
        type: number
      review_date:
        type: string
      reviewer_info:
        description: JSON-encoded reviewer info
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: This is a sample server for a review system.
  title: Review System API
  version: "1.0"
paths:
  /health:
    get:
      description: Get server health status
      operationId: health-check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
  /providers:
    get:
      description: Get a list of providers with optional filters
      operationId: get-providers-list
      parameters:
      - description: Provider name
        in: query
        name: name
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/response.HTTPResponseContent'
                  - properties:
                      results:
                        items:
                          $ref: '#/definitions/review.Provider'
                        type: array
                    type: object
              type: object
      summary: Get a list of providers
  /providers/{id}:
    get:
      description: Get a provider by ID
      operationId: get-provider-by-id
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/review.Provider'
      summary: Get a provider by ID
  /reviews:
    get:
      description: Get a list of reviews with optional filters
      operationId: get-reviews-list
      parameters:
      - description: Hotel ID
        in: query
        name: hotel_id
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.HTTPResponse'
            - properties:
                content:
                  allOf:
                  - $ref: '#/definitions/response.HTTPResponseContent'
                  - properties:
                      results:
                        items:
                          $ref: '#/definitions/review.Review'
                        type: array
                    type: object
              type: object
      summary: Get a list of reviews
  /reviews/{id}:
    get:
      description: Get a Review by ID
      operationId: get-review-by-id
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/review.Review'
      summary: Get a Review by ID
swagger: "2.0"
