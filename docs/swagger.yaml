basePath: /api/v1
definitions:
  review.Hotel:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  review.Provider:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        description: e.g., "Agoda"
        type: string
      updated_at:
        type: string
    type: object
  review.ProviderHotel:
    properties:
      created_at:
        type: string
      grades:
        description: JSON-encoded grades
        type: string
      hotel_id:
        type: integer
      id:
        type: integer
      overall_score:
        type: number
      provider_hotel_id:
        description: Provider's hotelId (e.g., "10984")
        type: string
      provider_id:
        type: integer
      review_count:
        type: integer
      updated_at:
        type: string
    type: object
  review.Review:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: integer
      lang:
        type: string
      provider_hotel_id:
        type: integer
      provider_id:
        type: integer
      provider_review_id:
        description: From comment.hotelReviewId
        type: string
      rating:
        type: number
      review_date:
        type: string
      reviewer_info:
        description: JSON-encoded reviewer info
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a review system.
  title: Review System API
  version: "1.0"
paths:
  /health:
    get:
      description: Get server health status
      operationId: health-check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
  /hotels:
    get:
      description: Get all hotels
      operationId: get-hotels
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/review.Hotel'
            type: array
      summary: Get all hotels
    post:
      consumes:
      - application/json
      description: Create a new hotel
      operationId: create-hotel
      parameters:
      - description: Hotel object
        in: body
        name: hotel
        required: true
        schema:
          $ref: '#/definitions/review.Hotel'
      responses:
        "201":
          description: Created
      summary: Create a new hotel
  /hotels/{id}:
    delete:
      description: Delete a hotel
      operationId: delete-hotel
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete a hotel
    get:
      description: Get a hotel by ID
      operationId: get-hotel-by-id
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/review.Hotel'
      summary: Get a hotel by ID
    put:
      consumes:
      - application/json
      description: Update an existing hotel
      operationId: update-hotel
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Hotel object
        in: body
        name: hotel
        required: true
        schema:
          $ref: '#/definitions/review.Hotel'
      responses:
        "200":
          description: OK
      summary: Update an existing hotel
  /provider-hotels:
    get:
      description: Get all provider hotels
      operationId: get-provider-hotels
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/review.ProviderHotel'
            type: array
      summary: Get all provider hotels
    post:
      consumes:
      - application/json
      description: Create a new provider hotel
      operationId: create-provider-hotel
      parameters:
      - description: Provider Hotel object
        in: body
        name: providerHotel
        required: true
        schema:
          $ref: '#/definitions/review.ProviderHotel'
      responses:
        "201":
          description: Created
      summary: Create a new provider hotel
  /provider-hotels/{id}:
    delete:
      description: Delete a provider hotel
      operationId: delete-provider-hotel
      parameters:
      - description: Provider Hotel ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete a provider hotel
    get:
      description: Get a provider hotel by ID
      operationId: get-provider-hotel-by-id
      parameters:
      - description: Provider Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/review.ProviderHotel'
      summary: Get a provider hotel by ID
    put:
      consumes:
      - application/json
      description: Update an existing provider hotel
      operationId: update-provider-hotel
      parameters:
      - description: Provider Hotel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Provider Hotel object
        in: body
        name: providerHotel
        required: true
        schema:
          $ref: '#/definitions/review.ProviderHotel'
      responses:
        "200":
          description: OK
      summary: Update an existing provider hotel
  /providers:
    get:
      description: Get all providers
      operationId: get-providers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/review.Provider'
            type: array
      summary: Get all providers
    post:
      consumes:
      - application/json
      description: Create a new provider
      operationId: create-provider
      parameters:
      - description: Provider object
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/review.Provider'
      responses:
        "201":
          description: Created
      summary: Create a new provider
  /providers/{id}:
    delete:
      description: Delete a provider
      operationId: delete-provider
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete a provider
    get:
      description: Get a provider by ID
      operationId: get-provider-by-id
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/review.Provider'
      summary: Get a provider by ID
    put:
      consumes:
      - application/json
      description: Update an existing provider
      operationId: update-provider
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      - description: Provider object
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/review.Provider'
      responses:
        "200":
          description: OK
      summary: Update an existing provider
  /reviews:
    get:
      description: Get all reviews
      operationId: get-reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/review.Review'
            type: array
      summary: Get all reviews
    post:
      consumes:
      - application/json
      description: Create a new review
      operationId: create-review
      parameters:
      - description: Review object
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/review.Review'
      responses:
        "201":
          description: Created
      summary: Create a new review
  /reviews/{id}:
    delete:
      description: Delete a review
      operationId: delete-review
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
      summary: Delete a review
    get:
      description: Get a review by ID
      operationId: get-review-by-id
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/review.Review'
      summary: Get a review by ID
    put:
      consumes:
      - application/json
      description: Update an existing review
      operationId: update-review
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      - description: Review object
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/review.Review'
      responses:
        "200":
          description: OK
      summary: Update an existing review
swagger: "2.0"
